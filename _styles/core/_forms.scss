label {
  @apply inline-block;
}

// Hide the cancel button on search inputs
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  appearance: none;
  display: none;
}

// Hide the up / down buttons on number inputs
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

// Fix font size on form elements in iOS
@media screen and (-webkit-min-device-pixel-ratio: 0) and (max-device-width: 1024px) {
  select,
  textarea,
  input {
    font-size: 16px !important;
  }
}

.form-group {
  & + & {
    @apply mt-4;
  }

  label {
    @apply font-medium text-black mb-1 text-sm;
  }

  &__helper,
  &__error {
    @apply block mt-1 text-sm;
  }

  &__helper {
    @apply text-grey;
  }

  &__error {
    @apply text-red;
  }  
}

// This wraps the input, icon, etc.
// Markup / styling is heavily inspired by -> https://primer.style/components/text-input/react/alpha
.form-control {
  @apply relative w-full flex items-stretch gap-x-2 appearance-none overflow-hidden;
  @apply border border-black rounded;
  @apply text-black;

  transition: {
    property: background-color, border-color, color;
    duration: 250ms;
    timing-function: ease;
  }
  // Add hover states
  @apply hover:border-black active:border-black focus:border-black;

  // When disabled...
  &:has([aria-disabled="true"]),
  &:has([disabled]) {
    @apply cursor-not-allowed;
    @apply bg-[#DDD];

    // Kill hover states - override with the default styles
    // @apply hover:border-accent-border active:bg-bground-secondary focus:bg-bground-secondary;
  }

  &:focus-within {
    @apply border-black;
  }

  &:has(input:focus-visible),
  &:has(select:focus-visible),
  &:has(textarea:focus-visible) {
    @apply outline-none; // Applies outline-width and offset
    @apply outline-blue;

    input {
      @apply outline-none;
    }    
  }  

  &:has([aria-invalid="true"]) {
    @apply border-red;
  }

  &:has(select) {
    select {
      @apply pr-8;
      appearance: none; // Hide the default browser icon

      &:not([disabled]) {
        @apply cursor-pointer;
      }
    }

    // Uncomment to add an icon to the right of the select
    .form-control__affix:last-child {
      @apply absolute right-0 top-1/2 -translate-y-1/2 pointer-events-none;
    }
  }

  &:has(textarea) {
    .form-control__affix {
      display: none !important;
    }
  }

  input,
  select,
  textarea {
    @apply w-full px-3 placeholder-grey;

    &[aria-disabled="true"],
    &[disabled] {
      @apply cursor-not-allowed;
    }
  }

  input,
  select {
    @apply h-8;
  }

  textarea {
    @apply py-3;
  }  
}

.form-control__affix {
  @apply inline-flex items-center;

  button {
    @apply h-full;
  }

  &:first-child {
    @apply pl-3 pr-0;
  }

  &:last-child {
    @apply pr-3 pl-0;
  }
}



// Checkbox + Radio
.form-check {
  display: block;
  min-height: 1.5rem;
  padding-left: 2.2em;

  label {
    margin-bottom: 0;
  }

  & + & {
    margin-top: 0.5rem;
  }
}

.form-check-input {
  width: 20px;
  height: 20px;
  margin-top: 0.15em;
  vertical-align: top;
  background-color: #fff;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: 1px solid rgba(0,0,0,.25);
  // border: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-print-color-adjust: exact;
  color-adjust: exact;

  &[type="checkbox"] {
    border-radius: 5px;
  }

  &[type="radio"] {
    border-radius: 50%;
    border: 1px solid black;
  }

  &:checked {
    &[type="checkbox"] {
      background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12.584" height="10.259" viewBox="0 0 12.584 10.259"><path id="Path_1501" data-name="Path 1501" d="M37.724,283.022l-5.808,5.808L29.587,286.5l-1.516,1.514,2.327,2.328,0,0,1.514,1.517,7.33-7.327Z" transform="translate(-27.364 -282.314)" fill="%23295024" stroke="rgba(0,0,0,0)" stroke-miterlimit="10" stroke-width="1"/></svg>');
      background-size: 70% 70%;
      background-position: center;
    }
  }
}

.form-check .form-check-input {
  float: left;
  margin-left: -2.3em;
}


// Quantity Adjuster
.quantity-adjuster {
  display: inline-flex;
  align-items: center;
  gap: 3px;
  font-size: 14px;

  &__button {
    position: relative;
    height: 22px;
    width: 22px;
    background-color: gray;
    transition: background-color 100ms ease;

    &.is-disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
  }

  // @include has-hover {
  //   &__button:not(.is-disabled):hover {
  //     background-color: var(--color-orange);

  //     .quantity-adjuster__icon:before,
  //     .quantity-adjuster__icon:after {
  //       background-color: var(--color-white);
  //     }
  //   }
  // }

  &__value {
    display: inline-block;
    min-width: 41px;
    text-align: center;
    padding: 0 10px;
    background: white;
    border: 1px solid gray;
    line-height: 20px; // @TODO - Probably a better way to vertically center the number :/
  }

  &__icon {
    display: inline-block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 5px;
    width: 5px;

    &:before,
    &:after {
      content: '';
      position: absolute;
      background-color: black;
      transition: background-color 100ms ease;
    }

    // Horizontal bar
    &:before {
      top: 50%;
      left: 0;
      right: 0;
      height: 1px;
      transform: translateY(-50%);
    }    

    &.plus {
      height: 7px;
      width: 7px;

      &:after {
        left: 50%;
        top: 0;
        bottom: 0;
        transform: translateX(-50%);
        width: 1px;
      }
    }

    // &.minus {

    // }
  }

  // &__button:first-child {
  //   .quantity-adjuster__icon {
  //     left: 75%;
  //   }
  // }

  // &__button:last-child {
  //   .quantity-adjuster__icon {
  //     left: 30%
  //   }  
  // }
}
